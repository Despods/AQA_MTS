using DelegateHomeWork;

class Program
{
    public static void Main()
    {
        /*
        Для приложения объявить тип делегата, который ссылается на метод.
        Требования к сигнатуре метода следующие:
        метод не имеет входных параметров;
        метод возвращает int значение.
        Реализовать вызов метода с помощью делегата. Метод возвращает случайное значение от 0 до 10.
        */
        Task1Delegate task1Delegate = new Task1Delegate();
        task1Delegate.Run();

        /*
        Для приложения объявить тип делегата, который ссылается на метод. Требования к сигнатуре метода следующие:
        метод получает входным параметром переменную типа double;
        метод возвращает значение типа double, которое есть результатом вычисления в соответствии с условием задачи.
        Реализовать вызов трех методов с помощью делегата, которые получают радиус R в качестве входного параметра и вычисляют:
        длину окружности по формуле D = 2 · π · R;
        площадь круга по формуле S = π · R2;
        объем шара. Формула V = 4/3 · π · R3.
        Методы должны быть представлены в отдельном классе как нестатические (без ключевого слова static). Желательно, чтобы класс был объявлен в отдельном модуле (файле).
        */
        Task2Delegate task2Delegate = new Task2Delegate();
        task2Delegate.Run();

        /*
        Для приложения объявить тип делегата, который ссылается на метод. Требования к сигнатуре метода следующие:
        метод имеет входной параметр типа int[];
        метод возвращает значение типа int[].
        Дополнительно создать enum с типами сортировки (не менее 2-ух)
        Реализовать метод, который на основании типа сортировки возвращает тип делегата.
        Основная программа выполняет сортировку случайно сгененированного массива на основании выбранного типа.
        */
        
        Task3Delegate task3Delegate = new Task3Delegate();
        task3Delegate.Run();
    }
}
